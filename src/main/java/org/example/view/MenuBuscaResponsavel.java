package org.example.view;

import org.example.controller.RemoverResponsavel;
import org.example.model.Escola;
import org.example.model.Responsavel;

import java.util.InputMismatchException;
import java.util.Scanner;

/**
 * Classe respons√°vel por exibir o menu de gerenciamento de respons√°veis.
 * <p>
 * Permite ao usu√°rio ler informa√ß√µes de um respons√°vel, atualizar seus dados ou delet√°-lo.
 * O respons√°vel √© buscado pelo nome.
 * </p>
 *
 * Autor: Henrick
 * Vers√£o: 1.0
 */
public class MenuBuscaResponsavel {
    Scanner sc = new Scanner(System.in);

    /**
     * Exibe o menu de gerenciamento de respons√°veis.
     * <p>
     * As op√ß√µes dispon√≠veis s√£o:
     * <ul>
     *     <li>0 - Ler informa√ß√µes do respons√°vel</li>
     *     <li>1 - Atualizar dados do respons√°vel</li>
     *     <li>2 - Deletar respons√°vel</li>
     *     <li>3 - Voltar ao menu anterior</li>
     * </ul>
     *
     * @param escola Escola cujos respons√°veis ser√£o gerenciados
     */
    public void ExibirMenuResponsavel(Escola escola) {
        try {
            System.out.println("\n====================================");
            System.out.println("        Gerenciar Respons√°vel        ");
            System.out.println("====================================\n");

            System.out.println("[0] Ler informa√ß√µes");
            System.out.println("[1] Atualizar");
            System.out.println("[2] Deletar");
            System.out.println("[3] Voltar");
            System.out.print("\nOp√ß√£o: ");

            int acao = sc.nextInt();
            sc.nextLine();

            System.out.print("\nDigite o nome do respons√°vel: ");
            String nome = sc.nextLine().trim();

            Responsavel buscado = buscarResponsavelPorNome(escola, nome);

            if (buscado == null) {
                System.out.println("\n‚ùå N√£o h√° respons√°vel com esse nome cadastrado.");
            } else {
                switch (acao) {
                    case 0:
                        System.out.println("\n--- Informa√ß√µes do Respons√°vel ---");
                        System.out.println("Nome: " + buscado.getNome());
                        System.out.println("Data de Nascimento: " + buscado.getDataNascimento());
                        System.out.println("Telefone: " + buscado.getTelefone());
                        System.out.println("Endere√ßo: " + buscado.getEndereco().bairro + " - " + buscado.getEndereco().cidade);
                        break;
                    case 1:
                        AtualizarResponsavel atualizarResponsavel = new AtualizarResponsavel();
                        atualizarResponsavel.AtualizarResponsavel(escola, buscado);
                        break;
                    case 2:
                        RemoverResponsavel removerResponsavel = new RemoverResponsavel();
                        removerResponsavel.RemoverResponsavel(escola, buscado);
                        System.out.println("\n‚úÖ Respons√°vel removido e desvinculado dos alunos.");
                        break;
                    case 3:
                        System.out.println("\nüîô Retornando ao menu anterior...");
                        break;
                    default:
                        System.out.println("\n‚ö†Ô∏è Op√ß√£o inv√°lida. Tente novamente.");
                        break;
                }
            }

        } catch (InputMismatchException e) {
            System.out.println("\n‚ùå Entrada inv√°lida. Digite apenas n√∫meros para a op√ß√£o.");
            sc.nextLine();
        } catch (Exception e) {
            System.out.println("\n‚ùå Ocorreu um erro inesperado: " + e.getMessage());
        }
    }

    /**
     * Busca um respons√°vel pelo nome na lista de respons√°veis da escola.
     *
     * @param escola Escola cujos respons√°veis ser√£o pesquisados
     * @param nome Nome do respons√°vel a ser buscado
     * @return O objeto Responsavel correspondente ao nome, ou null se n√£o encontrado
     */
    private Responsavel buscarResponsavelPorNome(Escola escola, String nome) {
        if (escola.getResponsaveis() != null) {
            for (Responsavel r : escola.getResponsaveis()) {
                if (r.getNome().equalsIgnoreCase(nome)) return r;
            }
        }
        return null;
    }
}




